/*Copyright 2017, 2016 Timofey Rechkalov <ntsdk@yandex.ru>

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
   limitations under the License. */

"use strict";

(function(exports){

    exports.data = {
        "Meta": {
            "name" : "",
            "date" : "",
            "preGameDate" : "",
            "description" : ""
        },
        "Characters": {},
        "ProfileSettings" : [],
        "Stories": {},
        "Settings" : {
            "BriefingPreview" : {
            },
            "Stories" : {
            },
            "CharacterProfile" : {
            }
        },
        "Version": "0.4.1"
    };

})(typeof exports === 'undefined'? this['EmptyBase']={}: exports);
/*Copyright 2017 Timofey Rechkalov <ntsdk@yandex.ru>

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
   limitations under the License. */

/*
 */
"use strict";

(function(exports){
    
    exports.themeList = ['nims-theme', 'des-light-theme', 'des-dark-theme'];
    
    exports.assetTypes = ["local","global"];
    
    exports.shopDataTypes = ["corporation","sellerLogin","sellerPassword"];
    
    exports.ownedEntityTypes = ['shop','asset'];

    exports.assetProfileStructure = [{
        name: "displayString",
        type: "string",
    },{
        name: "isPhysical",
        type: "checkbox",
    },{
        name: "resourceCost",
        type: "number",
    },{
        name: "apiKey",
        type: "string",
    },{
        name: "description",
        type: "text",
    }];
    
    exports.assetEditableItems = ['displayString','isPhysical','resourceCost','apiKey','description'];
    exports.localAssetEditableItems = ['displayString','description'];
    
    exports.localAssetProfileStructure = [{
        name: "displayString",
        type: "string",
    },{
        name: "description",
        type: "text",
    }];
    
    exports.httpTimeout = 5000;
    
})(typeof exports === 'undefined'? this['Constants']={}: exports);


/*Copyright 2017 Timofey Rechkalov <ntsdk@yandex.ru>

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
   limitations under the License. */

/*global
 // Utils
 */

"use strict";

(function(exports) {
    
    // argument description
    // add function name to log it
    // ignoreParams - make true if you don't need params in log. 
    //     Example - createMaster params include password.
    // filter - add this function to filter out unnecessary calls. 
    //     Example - we need all meta info calls except description.
    // rewrite - make true if you don't want to flood log with some repeated call. 
    //     For example auto call of getDatabase will flood everything.
    exports.apiInfo = {
        "baseAPI" : {
            "_init" : null,
            "getDatabase" : {"rewrite" : true},
            "setDatabase" : {"ignoreParams": true},
            "getMetaInfo" : null,
            "setMetaInfo" : {}
        },
        "consistencyCheckAPI" : {
            "getConsistencyCheckResult" : null
        },
        "logAPI" : {
            "log" : null,
            "getLog" : null
        },
        "entityAPI" : {
            "getEntityNamesArray" : null
        },
        "shopAPI" : {
            "getShopNamesArray" : null,
            "getShopAssets" : null,
            "getShopPasswords" : null,
            "addAssetToShop" : {},
            
            "removeAssetFromShop" : {},
            "setShopData" : {},
            "getShop" : null,
            "createShop" : {},
            
            "changeShopPassword" : {},
            "removeShop" : {},
            "createCategory" : {},
            "renameCategory" : {},
            
            "removeCategory" : {},
            "getLocalAsset" : null,
            "createLocalAsset" : {},
            "renameLocalAsset" : {},
            
            "removeLocalAsset" : {},
            "updateLocalAssetField" : {},
            "setAssetCost" : {},
            "addGlobalAssetToCategory" : {},
            
            "addLocalAssetToCategory" : {},
            "removeGlobalAssetFromCategory" : {},
            "removeLocalAssetFromCategory" : {},
        },
        "externalAPI" : {
            "getShopAPICheck" : null,
            "getShopsAPICheck" : null,
            "getImplantsAPICheck" : null,
            "getPillsAPICheck" : null,
            "importImplants" : {},
            "importPills" : {},
            "getShopIndex" : null,
            "buyAsset" : {},
            "getTheme": null,
            "setTheme": {}
        },
        "assetsAPI" : {
            "getAssetNamesArray" : null,
            "getGlobalAssetDisplayNames" : null,
            "getAsset" : null,
            "createAsset" : {},
            "renameAsset" : {},
            "removeAsset" : {},
            "updateAssetField" : {},
        },
        "userAPI" : {
            "getUser" : null,
            "setPassword" : null,
            "checkPassword" : null,
            "login" : null,
            "register" : null,
            "getShopName" : null
        },
        "permissionAPI" : {
            "hasPermission" : null
        },
    };
    
    
    // isServer - used in server mode. If false then user in logs will be named "user".
    // environment - used to disable this.log function in thin client in server version.
    //      I agree it is strange.
    exports.attachLogCalls = function(LocalDBMS, R, isServer) {
        
        var apiInfoObj = R.mergeAll(R.values(exports.apiInfo));
        var filteredApi = R.filter(R.compose(R.not, R.isNil), apiInfoObj);
        
        Object.keys(LocalDBMS.prototype)
        .filter(R.prop(R.__, filteredApi))
        .forEach(function(funcName){
            var oldFun = LocalDBMS.prototype[funcName];
            LocalDBMS.prototype[funcName] = function(){
                var arr = [];
                for (var i = 0; i < arguments.length-1; i++) {
                    arr.push(arguments[i]);
                }
                
                var accept = true;
                if(filteredApi[funcName].filter){
                    accept = filteredApi[funcName].filter(arr);
                }
                
                if(accept){
                    var userName = "user";
                    if(isServer){
                        userName = arguments[arguments.length-1].name;
                    }
                    
                    this.log(userName, funcName, !!filteredApi[funcName].rewrite, filteredApi[funcName].ignoreParams ? [] : arr);
                }
                
                return oldFun.apply(this, arguments);
            }
        });
        
    };
    
})(typeof exports === 'undefined' ? this['Logger'] = {} : exports);

/*Copyright 2017 Timofey Rechkalov <ntsdk@yandex.ru>

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
   limitations under the License. */

"use strict";

(function(callback){
        
    function ProjectUtils(exports, R, Constants, Errors) {
    }
    
    callback(ProjectUtils);

})(function(api){
    typeof exports === 'undefined'? api(this['ProjectUtils'] = {}, R, Constants, Errors, CommonUtils) : module.exports = api;
}.bind(this));
/*Copyright 2017 Timofey Rechkalov <ntsdk@yandex.ru>

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
   limitations under the License. */

/*global
 // Utils
 */

"use strict";

(function(exports) {
    
    exports.migrate = function(data) {
        if (!data.Version) {

            data.Settings = {};

            var story, storyCharacters;
            Object.keys(data.Stories).forEach(function(storyName) {
                story = data.Stories[storyName];
                storyCharacters = Object.keys(story.characters);
                storyCharacters.forEach(function(character) {
                    story.characters[character].activity = {};
                });
            });

            data.Version = "0.0.4";
        }
        if (data.Version === "0.0.4") { // new versioning rule
            data.Version = "0.4.1";
        }
        if(data.Version === "0.4.1"){ // new 
            delete data.Settings["Events"];
            data.Version = "0.4.3";
        }
        if(data.Version === "0.4.3"){
            data.Log = [];
            data.Version = "0.4.4";
            data.Meta.saveTime = new Date();
        }
        if(data.Version === "0.4.4"){
            // see #3
            var char, story;
            Object.keys(data.Characters).forEach(function(charName) {
                char = data.Characters[charName];
                delete char.displayName;
            });
            Object.keys(data.Stories).forEach(function(storyName) {
                story = data.Stories[storyName];
                delete story.displayName;
            });
            data.Version = "0.4.4u1";
        }
        if(data.Version === "0.4.4u1"){
            // see #12
            data.ProfileSettings.forEach(function(item){
                item.doExport = true;
            });
            data.Meta.saveTime = new Date().toString();
            // see #13
            for(var storyName in data.Stories){
                var story = data.Stories[storyName];
                story.events.forEach(function(event){
                    delete event.index;
                    delete event.storyName;
                });
            }
            // see #17
            for(var storyName in data.Stories){
                var story = data.Stories[storyName];
                story.events.forEach(function(event){
                    for(var character in event.characters){
                        delete event.characters[character].name;
                        event.characters[character].time = "";
                    }
                });
            }
            data.Version = "0.4.4u2";
        }
        if(data.Version === "0.4.4u2"){
            // see #17 - reopened
            for(var storyName in data.Stories){
                var story = data.Stories[storyName];
                story.events.forEach(function(event){
                    for(var character in event.characters){
                        delete event.characters[character].name;
                    }
                });
            }
            data.Version = "0.4.4u3";
        }
        if(data.Version === "0.4.4u3"){
            data.Groups = {};
            if(data.ManagementInfo){
                for(var userName in data.ManagementInfo.UsersInfo){
                    data.ManagementInfo.UsersInfo[userName].groups = [];
                }
            }
            
            data.Version = "0.5.0";
        }
        if(data.Version === "0.5.0"){
            data.InvestigationBoard = {
                groups : {},
                resources : {},
                relations : {}
            };
            data.Version = "0.5.1";
        }
        if(data.Version === "0.5.1"){
            data.Relations = {};
            data.Version = "0.5.2";
        }
        if(data.Version === "0.5.2"){
            if(data.Meta.date === ''){
                data.Meta.date = '1970/01/01 00:00';
            }
            if(data.Meta.preGameDate === ''){
                data.Meta.preGameDate = '1970/01/01 00:00';
            }
            data.Version = "0.5.2u1";
        }
        if(data.Version === "0.5.2u1"){
            data.CharacterProfileStructure = data.ProfileSettings;
            delete data.ProfileSettings;
            data.PlayerProfileStructure = [];
            data.Players = {};
            data.ProfileBindings = {};
            if(data.ManagementInfo){
                for(var userName in data.ManagementInfo.UsersInfo){
                    data.ManagementInfo.UsersInfo[userName].players = [];
                }
            }
            data.Version = "0.5.3";
        }
        if(data.Version === "0.5.3"){
            if(data.ManagementInfo){
                data.ManagementInfo.PlayersInfo = {};
                data.ManagementInfo.WelcomeText = '';
                data.ManagementInfo.PlayersOptions = {
                    allowPlayerCreation: false,
                    allowCharacterCreation: false,
                };
            }
            data.Version = "0.6.0";
        }
        if(data.Version === "0.6.0"){
            data.CharacterProfileStructure.forEach(function(item){
                item.playerAccess = 'hidden';
            });
            data.PlayerProfileStructure.forEach(function(item){
                item.playerAccess = 'hidden';
            });
            data.Version = "0.6.1";
        }
        if(data.Version === "0.6.1"){
            data.CharacterProfileStructure.forEach(function(item){
                item.showInRoleGrid = false;
            });
            data.PlayerProfileStructure.forEach(function(item){
                item.showInRoleGrid = false;
            });
            data.Version = "0.6.2";
        }
        if(data.Version === "0.6.2"){
            data.Shops = {};
            data.Assets = {};
            data.Version = "0.6.3";
        }
        if(data.Version === "0.6.3"){
            Object.keys(data.Shops).forEach( shopName => {
                data.Shops[shopName].corporation = "";
            });
            Object.keys(data.Assets).forEach( name => {
                data.Assets[name].displayString = "";
                data.Assets[name].isPhysical = false;
                data.Assets[name].resourceCost = 0;
                data.Assets[name].apiKey = "";
                data.Assets[name].description = "";
            });
            
            data.Version = "0.6.4";
        }
        if(data.Version === "0.6.4"){
            Object.keys(data.Shops).forEach( shopName => {
                R.keys(data.Shops[shopName].localAssets).forEach((name) => {
                    data.Shops[shopName].localAssets[name] = {
                        description: '',
                        displayString: ''
                    };
                });
            });
            Object.keys(data.Shops).forEach( shopName => {
                R.keys(data.Shops[shopName].categories).forEach((name) => {
                    data.Shops[shopName].categories[name] = {
                        globals: {},
                        locals: {}
                    };
                });
            });
            data.Version = "0.6.5";
        }
        if(data.Version === "0.6.5"){
            delete data.CharacterProfileStructure ;
            delete data.PlayerProfileStructure    ;
            delete data.Characters                ;
            delete data.Players                   ;
            delete data.ProfileBindings           ;
            delete data.Stories                   ;
            delete data.Groups                    ;
            delete data.InvestigationBoard        ;
            delete data.Relations                 ;
            delete data.ManagementInfo            ;
            data.Version = "0.6.6";
        }
        if(data.Version === "0.6.6"){
            Object.keys(data.Shops).forEach( shopName => {
                data.Shops[shopName].sellerLogin = "";
                data.Shops[shopName].sellerPassword = "";
            });
            data.Version = "0.6.7";
        }
        if(data.Version === "0.6.7"){
            data.Misc = {};
            data.Version = "0.6.8";
        }
        if(data.Version === "0.6.8"){
            data.Misc.Themes = {};
            data.Version = "0.6.9";
        }
        
        
        return data;
    };
    
})(typeof exports === 'undefined' ? this['Migrator'] = {} : exports);

/*Copyright 2017 Timofey Rechkalov <ntsdk@yandex.ru>

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
   limitations under the License. */

/*global
 // Utils
 */

"use strict";

(function(callback){
    
    function Schema(exports, R, CommonUtils, Constants) {
    
        exports.getSchema = function(base) {
            var schema = {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "SMTK NIMS base",
                "description": "SMTK NIMS base schema.",
                "type": "object",
                'definitions': {}
            };
    
            var Meta =  getMetaSchema();
            var Log =  getLogSchema();
            var Assets =  getAssetsSchema();
            var Shops =  getShopsSchema();
//            var CharacterProfileStructure =  getProfileSettingsSchema();
//            var PlayerProfileStructure =  CharacterProfileStructure;
//            var Characters =  getProfileSchema(base.CharacterProfileStructure);
//            var Players =  getProfileSchema(base.PlayerProfileStructure);
//            var ProfileBindings =  getProfileBindings(base.Characters, base.Players);
//            var Stories =  getStoriesSchema(base.Characters);
//            var Groups =  getGroupsSchema(base.CharacterProfileStructure, base.PlayerProfileStructure);
//            var InvestigationBoard = getInvestigationBoardSchema(base.Groups, base.InvestigationBoard);
//            var Relations = getRelationsSchema(base.Characters, schema.definitions);
//            var ManagementInfo = {};
//            if(base.ManagementInfo){
//                ManagementInfo =  getManagementInfoSchema(base.ManagementInfo, base.Characters, base.Stories, base.Groups, base.Players);
//            }
    
            schema.properties = {
                Meta : Meta,
                Shops : Shops,
                Assets : Assets,
//                CharacterProfileStructure : CharacterProfileStructure,
//                PlayerProfileStructure : PlayerProfileStructure,
//                Characters : Characters,
//                Players : Players,
//                ProfileBindings : ProfileBindings,
//                Stories : Stories,
                Version : {
                    "type" : "string"
                },
                Master : {
                    "type" : "object",
                    "properties": {
                        "name" : {
                            "type":"string",
                        },
                        "password" : {
                            "type":"string",
                        },
                    }
                },
                Log : Log,
//                Groups : Groups,
//                InvestigationBoard: InvestigationBoard,
                Settings: {},
                Misc: {},
//                Relations: Relations,
//                ManagementInfo: ManagementInfo
            };
            schema.required = ['Meta','Shops','Assets','Version','Log'];
//            schema.required = ["Meta", "CharacterProfileStructure", "PlayerProfileStructure", "Version", "Characters", 
//                               "Players", "ProfileBindings", "Stories", "Log", 'Groups', 'InvestigationBoard', 'Relations'];
            schema.additionalProperties = false;
            
            return schema;
        };
        
        function getMetaSchema() {
            return {
                "title": "Meta",
                "description": "Contains meta data for game: name, description, dates and saving time.",
                "type": "object",
                "properties": {
                    "name" : {
                        "type":"string",
                        "description":"Game name"
                    },
                    "date" : {
                        "type":"string",
                        "description":"Time of starting game in game universe."
                    },
                    "preGameDate" : {
                        "type":"string",
                        "description":"Time of starting pregame events in game universe."
                    },
                    "description" : {
                        "type":"string",
                        "description":"Description text for game."
                    },
                    "saveTime" : {
                        "type":"string",
                        "description":"Stringified date of last database saving."
                    }
                },
                "required": ["name","date","preGameDate","description","saveTime"],
                "additionalProperties": false
            };
        };
        
        function getProfileSettingsSchema() {
            return {
                "title": "CharacterProfileStructure",
                "description": "Describes character profile settings.",
                "type": "array",
                "items" : {
                    'oneOf' : [ {
                        "type" : "object",
                        "properties" : {
                            "name" : {
                                "type" : "string"
                            },
                            "type" : {
                                "type" : "string",
                                "enum" : [ "string", "text", "enum", 'multiEnum' ]
                            },
                            "value" : {
                                "type" : [ "string" ]
                            },
                            "doExport" : {
                                "type" : "boolean"
                            },
                            "showInRoleGrid" : {
                                "type" : "boolean"
                            },
                            "playerAccess" : {
                                "type" : "string",
                                "enum" : [ "write", "readonly", "hidden" ]
                            },
                        },
                        "required" : [ "name", "type", "value", "doExport", "playerAccess","showInRoleGrid"],
                        "additionalProperties" : false
                    }, {
                        "type" : "object",
                        "properties" : {
                            "name" : {
                                "type" : "string"
                            },
                            "type" : {
                                "type" : "string",
                                "enum" : [ "number" ]
                            },
                            "value" : {
                                "type" : [ "number" ]
                            },
                            "doExport" : {
                                "type" : "boolean"
                            },
                            "showInRoleGrid" : {
                                "type" : "boolean"
                            },
                            "playerAccess" : {
                                "type" : "string",
                                "enum" : [ "write", "readonly", "hidden" ]
                            },
                        },
                        "required" : [ "name", "type", "value", "doExport", "playerAccess", "showInRoleGrid" ],
                        "additionalProperties" : false
                    }, {
                        "type" : "object",
                        "properties" : {
                            "name" : {
                                "type" : "string"
                            },
                            "type" : {
                                "type" : "string",
                                "enum" : [ "checkbox" ]
                            },
                            "value" : {
                                "type" : [ "boolean" ]
                            },
                            "doExport" : {
                                "type" : "boolean"
                            },
                            "showInRoleGrid" : {
                                "type" : "boolean"
                            },
                            "playerAccess" : {
                                "type" : "string",
                                "enum" : [ "write", "readonly", "hidden" ]
                            },
                        },
                        "required" : [ "name", "type", "value", "doExport", "playerAccess", "showInRoleGrid" ],
                        "additionalProperties" : false
                    } ]
                }
            };
        };
        
        function getLogSchema(){
            return {
                "type" : "array",
                "items" : {
                    "type" : "array",
                    "items" : {
                        "type" : "string",
                    },
                    "minItems" : 4,
                    "maxItems": 4
                }
            };
        };
        
        function getInvestigationBoardSchema(groups, investigationBoard){
            
            var ibGroupNames = Object.keys(investigationBoard.groups);
            var relGroupNames = ibGroupNames.map(function(groupName){
                return 'group-' + groupName;
            });
            var resourceNames = Object.keys(investigationBoard.resources);
            var relResourceNames = resourceNames.map(function(resourceName){
                return 'resource-' + resourceName;
            });
            
            var relationSetSchema = {
                "type" : "object",
                "properties" : {},
                "additionalProperties" : false
            };
            relGroupNames.forEach(function(relGroupName){
                relationSetSchema.properties[relGroupName] = {
                    "type" : "string"
                };
            });
            relResourceNames.forEach(function(relResourceName){
                relationSetSchema.properties[relResourceName] = {
                    "type" : "string"
                };
            });
            
            var relationsSchema = {
                "type" : "object",
                "properties" : {},
                "additionalProperties" : false
            };
            if(relGroupNames.length != 0){
                relationsSchema.required = relGroupNames;
            }
            
            relGroupNames.forEach(function(relGroupNames){
                relationsSchema.properties[relGroupNames] = relationSetSchema;
            });
            
            var resourcesSchema = {
                "type" : "object",
                "properties" : {},
                "additionalProperties" : false
            };
            
            resourceNames.forEach(function(resourceName){
                resourcesSchema.properties[resourceName] = {
                    "type" : "object",
                    "properties": {
                        "name" : {
                            'type' : 'string',
                            'enum': [resourceName]
                        }
                    },
                    "required" : ["name"],
                    "additionalProperties" : false
                }
            });
            
            var groupsSchema = {
                "type" : "object",
                "properties" : {},
                "additionalProperties" : false
            };
            var groupNames = Object.keys(groups);
            groupNames.forEach(function(groupName){
                groupsSchema.properties[groupName] = {
                    "type" : "object",
                    "properties": {
                        "name" : {
                            'type' : 'string',
                            'enum': [groupName]
                        },
                        'notes' : {
                            'type' : 'string'
                        }
                    },
                    "required" : [ "name", "notes"],
                    "additionalProperties" : false
                }
            });
            var schema = {
                "type" : "object",
                "properties": {
                    "groups" : groupsSchema, 
                    "resources" : resourcesSchema,
                    "relations" : relationsSchema
                }, 
                "required" : [ "groups", "resources", "relations"],
                "additionalProperties" : false
            };
            return schema;
        };
        
        function getShopsSchema() {
            var categoryProps2 = {
                "cost" : {
                    "type" : "number"
                }
            };
            var categoryProps = {
                "globals" : {
                    "type" : "object",
                    "additionalProperties": { 
                        "properties": categoryProps2,
                        "required": Object.keys(categoryProps2),
                        "additionalProperties": false
                    }
                }, 
                "locals" : {
                    "type" : "object",
                    "additionalProperties": { 
                        "properties": categoryProps2,
                        "required": Object.keys(categoryProps2),
                        "additionalProperties": false
                    }
                }
            };
            var localAssetProps = {
                "displayString" : {
                    "type" : "string"
                }, 
                "description" : {
                    "type" : "string"
                }
            };
            
            var shopProperties = {
                    "name" : {
                        "type" : "string"
                    }, 
                    "password" : {
                        "type" : "string"
                    }, 
                    "corporation" : {
                        "type" : "string"
                    }, 
                    "sellerLogin" : {
                        "type" : "string"
                    }, 
                    "sellerPassword" : {
                        "type" : "string"
                    }, 
                    "assets" : {
                        "type" : "object",
                        "additionalProperties": { 
                            "type": "boolean",
                            "enum": [true]
                        }
                    }, 
                    "localAssets" : {
                        "type" : "object",
                        "additionalProperties": { 
                            "type": "object",
                            "properties": localAssetProps,
                            "required": Object.keys(localAssetProps),
                            "additionalProperties": false
                        }
                    }, 
                    "categories" : {
                        "type" : "object",
                        "additionalProperties": { 
                            "type": "object",
                            "properties": categoryProps,
                            "required": Object.keys(categoryProps),
                            "additionalProperties": false
                        }
                    }
            };
            var schema = {
                    "type" : "object",
                    "additionalProperties": { 
                        "type": "object",
                        "properties": shopProperties,
                        "required": Object.keys(shopProperties),
                        "additionalProperties": false
                    }
            };
            return schema;
        }
        function getAssetsSchema() {
            var assetProperties = {
                "name" : {
                    "type" : "string"
                }, 
                "displayString" : {
                    "type" : "string"
                }, 
                "isPhysical" : {
                    "type" : "boolean"
                }, 
                "resourceCost" : {
                    "type" : "number"
                }, 
                "apiKey" : {
                    "type" : "string"
                }, 
                "description" : {
                    "type" : "string"
                }
            };
            var schema = {
                "type" : "object",
                "additionalProperties": { 
                    "type": "object",
                    "properties": assetProperties,
                    "required": Object.keys(assetProperties),
                    "additionalProperties": false
                }
            };
            return schema;
        }
        function getGroupsSchema(characterProfileSettings, playerProfileSettings) {
            var filterItems = [];
            var staticStringTemplate = {
                "type" : "object",
                "properties": {
                    "name" : {
                        "type" : "string",
                        "enum": [] // enum can't be empty, it is necessary to populate it
                    }, 
                    "type" :{
                        "type" : "string",
                        "enum": ["string"]
                    },
                    "regexString" :{
                        "type" : "string",
                        "minLength": 0
                    }
                }, 
                "required" : [ "name", "type", "regexString"],
                "additionalProperties" : false
            };
            
            let assocFunc = R.assocPath(['properties', 'name', 'enum']);
            filterItems.push(assocFunc([Constants.CHAR_NAME], R.clone(staticStringTemplate)));
            filterItems.push(assocFunc([Constants.CHAR_OWNER], R.clone(staticStringTemplate)));
            filterItems.push(assocFunc([Constants.PLAYER_NAME], R.clone(staticStringTemplate)));
            filterItems.push(assocFunc([Constants.PLAYER_OWNER], R.clone(staticStringTemplate)));
    
            filterItems = filterItems.concat(characterProfileSettings.map(makeProfileStructureItemSchema(Constants.CHAR_PREFIX)));
            filterItems = filterItems.concat(playerProfileSettings.map(makeProfileStructureItemSchema(Constants.PLAYER_PREFIX)));
            
            R.keys(R.fromPairs(Constants.summaryStats)).forEach(function(item){
                filterItems.push({
                    "type" : "object",
                    "properties" : {
                        "name" : {
                            "type" : "string",
                            "enum" : [ Constants.SUMMARY_PREFIX + item ]
                        },
                        "type" : {
                            "type" : "string",
                            "enum" : [ "number" ]
                        },
                        "num" :{
                            "type" : "number"
                        },
                        "condition" : {
                            "type" : "string",
                            "enum" : [ "greater", "lesser", "equal" ]
                        }
                    },
                    "required" : [ "name", "type", "num", "condition" ],
                    "additionalProperties" : false
                });
            });
            
            var groupProperties = {
                "name" : {
                    "type" : "string"
                }, 
                "masterDescription" : {
                    "type" : "string"
                }, 
                "characterDescription" : {
                    "type" : "string"
                }, 
                "filterModel" : {
                    "type" : "array", 
                    "items": {
                        "oneOf" : filterItems
                    }
                }, 
                "doExport" : {
                    "type":"boolean"
                }
            };
            var schema = {
                "type" : "object",
                "additionalProperties": { 
                    "type": "object",
                    "properties": groupProperties,
                    "required": Object.keys(groupProperties),
                    "additionalProperties": false
                }
            };
            return schema;
        }
        
        var makeProfileStructureItemSchema = R.curry(function(prefix, item){
            var data = {
                "type" : "object",
                "properties" : {
                    "name" : {
                        "type" : "string",
                        "enum" : [ prefix + item.name ]
                    },
                    "type" : {
                        "type" : "string",
                        "enum" : [ item.type ]
                    },
                },
                "required" : [ "name", "type" ],
                "additionalProperties" : false
            };

            switch (item.type) {
            case "text":
            case "string":
                data.properties.regexString = {
                    "type" : "string",
                    "minLength" : 0
                };
                data.required.push("regexString");
                break;
            case "number":
                data.properties.num = {
                    "type" : "number"
                };
                data.properties.condition = {
                    "type" : "string",
                    "enum" : [ "greater", "lesser", "equal" ]
                };
                data.required.push("num");
                data.required.push("condition");
                break;
            case "checkbox":
                data.properties.selectedOptions = {
                    "type" : "object",
                    "properties":{
                        "false" :{},
                        "true" :{}
                    },
                    "additionalProperties" : false
                }
                data.required.push("selectedOptions")
                break;
            case "enum":
                var properties = item.value.split(",").reduce(function(result, item){
                    result[item] = {};
                    return result;
                }, {});
                data.properties.selectedOptions = {
                    "type" : "object",
                    "properties": properties,
                    "additionalProperties" : false
                }
                data.required.push("selectedOptions");
                break;
            case "multiEnum":
                data.properties.condition = {
                    "type" : "string",
                    "enum" : [ "every", "equal", "some" ]
                };
                var properties = item.value.split(",").reduce(function(result, item){
                    result[item] = {};
                    return result;
                }, {});
                data.properties.selectedOptions = {
                    "type" : "object",
                    "properties": properties,
                    "additionalProperties" : false
                }
                data.required.push("selectedOptions")
                data.required.push("condition");
                break;
            default:
                console.log('Unexpected type ' + item.type);
            }
            return data;
        });
        
        function getProfileSchema(profileSettings) {
            var characterProperties = {
                "name" : {
                    "type" : "string"
                }
            };
            var value;
            profileSettings.forEach(function(item){
                switch(item.type){
                case "text":
                case "string":
                case "multiEnum": // it is hard to check multiEnum with schema. There is second check in consistency checker.
                    value = {
                        "type":"string"
                    };
                    break;
                case "checkbox":
                    value = {
                        "type":"boolean"
                    };
                    break;
                case "number":
                    value = {
                        "type":"number"
                    };
                    break;
                case "enum":
                    value = {
                        "type":"string",
                        "enum": item.value.split(",").map(function(item){
                            return item.trim();
                        })
                    };
                    break;
                default:
                    console.log('Unexpected type ' + item.type);
                }
                characterProperties[item.name] = value;
            });
            
    //        console.log(characterProperties);
            
            var schema = {
                "type" : "object",
                "additionalProperties": { 
                    "type": "object",
                    "properties": characterProperties,
                    "required":Object.keys(characterProperties),
                    "additionalProperties": false
                }
            };
            return schema;
        };
        
        function getProfileBindings(characters, players) {
            var playerNames = Object.keys(players);
            if(playerNames.length == 0){
                playerNames = ['123'];
            }
            
            var names = '^(' + R.keys(characters).map(CommonUtils.escapeRegExp).join('|') + ')$';
            var schema = {
                type : 'object',
                additionalProperties : false,
                patternProperties : {}
            };
            schema.patternProperties[names] = {
                type: 'string',
                enum: playerNames
            };
            
            return schema;
        }
        
        function getStoriesSchema(characters) {
            var charNames = Object.keys(characters);
            
            var eventCharacter = {
                    "type" : "object",
                    "properties": {
                        "text":{
                            "type":"string"
                        },
                        "time":{
                            "type":"string"
                        },
                        "ready":{
                            "type":"boolean"
                        }
                    },
                    "required":["text", "time"],
                    "additionalProperties" : false
            };
            
            var eventSchema = {
                "type" : "object",
                "properties" : {
                    "name":{
                        "type":"string"
                    },
                    "text":{
                        "type":"string"
                    },
                    "time":{
                        "type":"string"
                    },
                    "characters":{
                        "type" : "object",
                        // depends on story but for simplicity we check charNames only
                        "properties": charNames.reduce(function(obj, char){
                            obj[char] = eventCharacter;
                            return obj;
                        }, {}),
                        "additionalProperties" : false
                    }
                },
                "required":["name","text","time","characters"],
                "additionalProperties" : false
            };
            
            
            var storyCharacterSchema = {
                "type" : "object",
                "properties" : {
                    "name":{
                        "type":"string",
                        "enum": charNames
                    },
                    "inventory":{
                        "type":"string"
                    },
                    "activity":{
                        "type":"object",
                        "properties":{
                            "active":{
                                "type":"boolean"
                            },
                            "follower":{
                                "type":"boolean"
                            },
                            "defensive":{
                                "type":"boolean"
                            },
                            "passive":{
                                "type":"boolean"
                            },
                        },
                        "additionalProperties" : false
                    },
                },
                "required":["name","inventory","activity"],
                "additionalProperties" : false
            };
            
            var storySchema = {
                "type" : "object",
                "properties" : {
                    "name":{
                        "type":"string"
                    },
                    "story":{
                        "type":"string"
                    },
                    "characters": {
                        "type" : "object",
                        "properties": charNames.reduce(function(obj, char){
                            obj[char] = storyCharacterSchema;
                            return obj;
                        }, {}),
                        "additionalProperties" : false
                    },
                    "events":{
                        "type" : "array",
                        "items" : eventSchema
                    }
                },
                "required":["name","story","characters","events"],
                "additionalProperties" : false
            }
            
    
            var storiesSchema = {
                "type" : "object",
                "additionalProperties" : storySchema
            };
            
            return storiesSchema;
        };
        
        
        function getManagementInfoSchema(managementInfo, characters, stories, groups, players) {
            var charNames = Object.keys(characters);
            var storyNames = Object.keys(stories);
            var groupNames = Object.keys(groups);
            var playerNames = Object.keys(players);
            var userNames = Object.keys(managementInfo.UsersInfo);
            // enum can't be empty, ask about it here 
            // http://stackoverflow.com/questions/37635675/how-to-validate-empty-array-of-strings-with-ajv
            if(storyNames.length == 0){
                storyNames = ['123'];
            }
            if(charNames.length == 0){
                charNames = ['123'];
            }
            if(groupNames.length == 0){
                groupNames = ['123'];
            }
            if(playerNames.length == 0){
                playerNames = ['123'];
            }
            
            var userSchema = {
                "type" : "object",
                "properties" : {
                    "name" : {
                        "type" : "string"
                    },
                    "stories" : {
                        "type" : "array",
                        "items" : {
                            "type" : "string",
                            "enum" : storyNames
                        },
                        "minItems" : 0
                    },
                    "characters" : {
                        "type" : "array",
                        "items" : {
                            "type" : "string",
                            "enum" : charNames
                        }
                    },
                    "groups" : {
                        "type" : "array",
                        "items" : {
                            "type" : "string",
                            "enum" : groupNames
                        }
                    },
                    "players" : {
                        "type" : "array",
                        "items" : {
                            "type" : "string",
                            "enum" : playerNames
                        }
                    },
                    "salt" : {
                        "type" : "string"
                    },
                    "hashedPassword" : {
                        "type" : "string"
                    },
                },
                "required" : [ "name", "stories", "characters", "groups", "players", "salt", "hashedPassword" ],
                "additionalProperties" : false
            };
            var playerSchema = {
                "type" : "object",
                "properties" : {
                    "name" : {
                        "type" : "string"
                    },
                    "salt" : {
                        "type" : "string"
                    },
                    "hashedPassword" : {
                        "type" : "string"
                    },
                },
                "required" : [ "name", "salt", "hashedPassword" ],
                "additionalProperties" : false
            };
            var playersOptionsSchema = {
                "type" : "object",
                "properties" : {
                    "allowPlayerCreation" : {
                        "type" : "boolean"
                    },
                    "allowCharacterCreation" : {
                        "type" : "boolean"
                    },
                },
                "required" : [ "allowPlayerCreation", "allowCharacterCreation" ],
                "additionalProperties" : false
            };
            
            var managementInfoSchema = {
                "type" : "object",
                "properties" :{
                    "UsersInfo": {
                        "type":"object",
                        "additionalProperties" : userSchema
                    },
                    "PlayersInfo": {
                        "type":"object",
                        "additionalProperties" : playerSchema
                    },
                    "admin": {
                        "type":"string",
                        "enum": userNames
                    },
                    "editor": {
                        "type": [ "string", "null" ],
                        "enum": userNames.concat(null)
                    },
                    "adaptationRights": {
                        "type":"string",
                        "enum": ["ByStory", "ByCharacter"]
                    },
                    "WelcomeText": {
                        "type":"string",
                    },
                    "PlayersOptions": playersOptionsSchema,
                },
                "required":["UsersInfo","PlayersInfo","admin","editor","adaptationRights",'WelcomeText', "PlayersOptions"],
                "additionalProperties" : false
            };
            
            return managementInfoSchema;
        };
        
        function getRelationsSchema(Characters, definitions){
            var names = '^(' + R.keys(Characters).map(CommonUtils.escapeRegExp).join('|') + ')$';
            var schema = {
                type : 'object',
                additionalProperties : false,
                patternProperties : {}
            };
            schema.patternProperties[names] = {
                type: 'object',
                additionalProperties: false,
                patternProperties: {}
            };
            schema.patternProperties[names].patternProperties[names] = {
                type: 'string',
                minLength: 1
            };
            
            return schema;
        };
    };
    
    callback(Schema);
    
})(function(api){
    typeof exports === 'undefined'? api(this['Schema'] = {}, R, CommonUtils, Constants) : module.exports = api;
}.bind(this));
/*Copyright 2017 Timofey Rechkalov <ntsdk@yandex.ru>

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
   limitations under the License. */

"use strict";

(function(callback){

    function api(LocalDBMS, opts) {
        
        var R             = opts.R           ;
        var CU            = opts.CommonUtils ;
        var PC            = opts.Precondition;
        var Constants     = opts.Constants   ;
        var Errors        = opts.Errors      ;
        var listeners     = opts.listeners   ;
        
        var containerPath = ['Assets'];
        
        LocalDBMS.prototype.getAssetNamesArray = function(callback) {
            callback(null, Object.keys(R.path(containerPath, this.database)).sort(CU.charOrdA));
        };
        
        LocalDBMS.prototype.getGlobalAssetDisplayNames = function(callback) {
            callback(null, R.map(R.pick(['displayString']), R.path(containerPath, this.database)));
        };
        
        LocalDBMS.prototype.getAsset = function(name, callback) {
            var container = R.path(containerPath, this.database);
            PC.precondition(PC.entityExistsCheck(name, R.keys(container)), callback, () => {
                callback(null, CU.clone(container[name]));
            });
        };
        
        LocalDBMS.prototype.createAsset = function(name, callback) {
            var container = R.path(containerPath, this.database);
            PC.precondition(PC.createEntityCheck(name, R.keys(container)), callback, () => {
                var entity = {
                        name : name,
                        displayString : "",
                        isPhysical : false,
                        resourceCost : 0,
                        apiKey : "",
                        description : "",
//                        enabled: false,
//                        entities: []
                };
                
                R.path(containerPath, this.database)[name] = entity;
                this.ee.trigger("createAsset", arguments);
                if(callback) callback();
            });
        };

        LocalDBMS.prototype.renameAsset = function(fromName, toName, callback) {
            var container = R.path(containerPath, this.database);
            PC.precondition(PC.renameEntityCheck(fromName, toName, R.keys(container)), callback, () => {
                var data = container[fromName];
                data.name = toName;
                container[toName] = data;
                delete container[fromName];
                
                this.ee.trigger("renameAsset", arguments);
                
                if(callback) callback();
            });
        };
    
        // profiles
        LocalDBMS.prototype.removeAsset = function(name, callback) {
            var container = R.path(containerPath, this.database);
            PC.precondition(PC.removeEntityCheck(name, R.keys(container)), callback, () => {
                delete container[name];
                this.ee.trigger("removeAsset", arguments);
                if(callback) callback();
            });
        };
        
        var getTypeCheck = (fieldName, value) => {
            switch(fieldName){
            case 'displayString':
            case 'description':
            case 'apiKey':
                return PC.isString(value);
            case 'isPhysical':
                return PC.isBoolean(value);
            default: // resourceCost
                return PC.chainCheck([PC.isNumber(value), PC.isNonNegative(value)]);
            }
        };
        
        LocalDBMS.prototype.updateAssetField = function(assetName, fieldName, value, callback) {
            var container = R.path(containerPath, this.database);
            var chain = PC.chainCheck([PC.entityExistsCheck(assetName, R.keys(container)), 
                                       PC.isString(fieldName), PC.elementFromEnum(fieldName, Constants.assetEditableItems),
                                       getTypeCheck(fieldName, value)]);
            PC.precondition(chain, callback, () => {
                var data = container[assetName];
                data[fieldName] = value;
                if(callback) callback();
            });
        };
        
    };
    
    callback(api);

})(function(api){
    typeof exports === 'undefined'? this['assetsAPI'] = api: module.exports = api;
}.bind(this));
/*Copyright 2017 Timofey Rechkalov <ntsdk@yandex.ru>

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
   limitations under the License. */

"use strict";

(function(callback){
    
    function baseAPI(LocalDBMS, opts) {
        var Migrator      = opts.Migrator    ;
        var CU            = opts.CommonUtils ;
        var PC            = opts.Precondition;
        var EventEmitter  = opts.EventEmitter;
        var Constants     = opts.Constants   ;
        
        LocalDBMS.prototype._init = function(listeners){
            this.ee = new EventEmitter();
            var that = this;
            for(var triggerName in listeners){
                listeners[triggerName].forEach(function(listener){
                    that.ee.on(triggerName, listener.bind(that));
                });
            }
        };
    
        LocalDBMS.prototype.getDatabase = function(callback){
            this.database.Meta.saveTime = new Date().toString();
            callback(null, CU.clone(this.database));
        };
    
        LocalDBMS.prototype.setDatabase = function(database, callback){
            try {
                this.database = Migrator.migrate(database);
            } catch(err){
                return callback(err);
            }
            if(callback) callback();
        };
    
        LocalDBMS.prototype.getMetaInfo = function(callback){
            callback(null, CU.clone(this.database.Meta));
        };
    
        // overview
        LocalDBMS.prototype.setMetaInfo = function(name, value, callback){
            var chain = PC.chainCheck([PC.isString(name), PC.elementFromEnum(name, Constants.metaInfoList), PC.isString(value)]);
            PC.precondition(chain, callback, () => {
                this.database.Meta[name] = value;
                if(callback) callback();
            });
        };
    };
  
    callback(baseAPI);

})(function(api){
    typeof exports === 'undefined'? this['baseAPI'] = api: module.exports = api;
}.bind(this));
/*Copyright 2017 Timofey Rechkalov <ntsdk@yandex.ru>

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
   limitations under the License. */

"use strict";

(function(callback){
    
    function consistencyCheckAPI(LocalDBMS, opts) {
        var R             = opts.R           ;
        var CommonUtils   = opts.CommonUtils ;
        var validatorLib  = opts.Ajv         ;
        var schemaBuilder = opts.Schema      ;
        
        LocalDBMS.prototype.getConsistencyCheckResult = function(callback) {
            var errors = [];
            var pushError = function(str){
                errors.push(str);
            }
            
            innerAndOuterNameCheck(this.database.Assets, pushError);
            innerAndOuterNameCheck(this.database.Shops, pushError);
            var globalsList = R.keys(this.database.Assets);
            R.values(this.database.Shops).forEach(function(shop) {
                var address = JSON.stringify({shop: shop.name, srcArr: 'shop.assets', dstArr: 'globalsList'});
                allValuesFromListCheck(R.keys(shop.assets), globalsList, address, pushError);
                var localsList = R.keys(shop.localAssets);
                R.keys(shop.categories).forEach((categoryName) => {
                    var category = shop.categories[categoryName];
                    address = JSON.stringify({shop: shop.name, category: categoryName, srcArr: 'category.globals', dstArr: 'shop.assets'});
                    allValuesFromListCheck(R.keys(category.globals), R.keys(shop.assets), address, pushError);
                    address = JSON.stringify({shop: shop.name, category: categoryName, srcArr: 'category.locals', dstArr: 'localsList'});
                    allValuesFromListCheck(R.keys(category.locals), localsList, address, pushError);
                });
            });
            
            var schema = schemaBuilder.getSchema(this.database);
            var validator = validatorLib({allErrors: true}); // options can be passed, e.g. {allErrors: true}
            var validate = validator.compile(schema);
            var valid = validate(this.database);
            if (!valid) {
                errors = errors.concat(validate.errors);
            }
            
            callback(null, errors);
        };
        
        var allValuesFromListCheck = function(list, fromList, address, callback){
            var processError = getErrorProcessor(callback);
            var diff = R.difference(list, fromList);
            if(diff.length !== 0){
                processError("Object is inconsistent, list includes not existing values: address {0}, diff {1}, list {2}, fromList {3}", [address, diff, list, fromList]);
            }
        };
        var innerAndOuterNameCheck = function(obj, callback){
            var processError = getErrorProcessor(callback);
            R.keys(obj).forEach((outerName) => {
                if(obj[outerName].name !== outerName){
                    processError("Object is inconsistent, outer name is not equal to inner name: outer {0}, inner {1}", [outerName, obj[outerName].name]);
                }
            })
        };
        
        var getErrorProcessor = function(callback){
            return R.curry(R.compose(callback, CommonUtils.strFormat));
        }
        
    };
    
    callback(consistencyCheckAPI);

})(function(api){
    typeof exports === 'undefined'? this['consistencyCheckAPI'] = api: module.exports = api;
}.bind(this));
/*Copyright 2017 Timofey Rechkalov <ntsdk@yandex.ru>

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
   limitations under the License. */

"use strict";

(function(callback){

    function entityAPI(LocalDBMS, opts) {
        
        var R             = opts.R           ;
        var CU            = opts.CommonUtils ;
        var PC            = opts.Precondition;
        var Constants     = opts.Constants   ;
        var Errors        = opts.Errors      ;
        
        LocalDBMS.prototype.getEntityNamesArray = function(type, callback) {
            var chain = PC.chainCheck([PC.isString(type), PC.elementFromEnum(type, Constants.ownedEntityTypes)]);
            PC.precondition(chain, callback, () => {
                switch(type){
                case 'character':
                case 'player':
                    this.getProfileNamesArray(type, callback);
                    break;
                case 'group':
                    this.getGroupNamesArray(callback);
                    break;
                case 'story':
                    this.getStoryNamesArray(callback);
                    break;
                case 'shop':
                    this.getShopNamesArray(callback);
                    break;
                case 'asset':
                    this.getAssetNamesArray(callback);
                    break;
                default:
                    callback(new Errors.InternalError('errors-unexpected-switch-argument', [type]));
                }
            });
        };
    
    };
    callback(entityAPI);

})(function(api){
    typeof exports === 'undefined'? this['entityAPI'] = api: module.exports = api;
}.bind(this));

/*Copyright 2017 Timofey Rechkalov <ntsdk@yandex.ru>

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
   limitations under the License. */

"use strict";

(function(callback){

    function api(LocalDBMS, opts) {
        
        var R             = opts.R           ;
        var CU            = opts.CommonUtils ;
        var Constants     = opts.Constants   ;
        var Errors        = opts.Errors      ;
        var listeners     = opts.listeners   ;
        
        LocalDBMS.prototype.getShopAPICheck = function(shopName, callback) {
            callback(new Errors.ValidationError('admins-function-must-be-overriden-on-server', ['getShopAPICheck']));
        };
        
        LocalDBMS.prototype.getShopsAPICheck = function(callback) {
            callback(new Errors.ValidationError('admins-function-must-be-overriden-on-server', ['getShopsAPICheck']));
        };
        
        LocalDBMS.prototype.getImplantsAPICheck = function(callback) {
            callback(new Errors.ValidationError('admins-function-must-be-overriden-on-server', ['getImplantsAPICheck']));
        };
        
        LocalDBMS.prototype.getPillsAPICheck = function(callback) {
            callback(new Errors.ValidationError('admins-function-must-be-overriden-on-server', ['getPillsAPICheck']));
        };
        
        LocalDBMS.prototype.importImplants = function(callback) {
            callback(new Errors.ValidationError('admins-function-must-be-overriden-on-server', ['importImplants']));
        };
        
        LocalDBMS.prototype.importPills = function(callback) {
            callback(new Errors.ValidationError('admins-function-must-be-overriden-on-server', ['importPills']));
        };
        
        LocalDBMS.prototype.getShopIndex = function(shopName, callback) {
            callback(new Errors.ValidationError('admins-function-must-be-overriden-on-server', ['getShopIndex']));
        };

        LocalDBMS.prototype.buyAsset = function(shopName, assetName, assetType, cost, customerLogin, customerPassword, opts, callback) {
            callback(new Errors.ValidationError('admins-function-must-be-overriden-on-server', ['buyAsset']));
        };
        
        LocalDBMS.prototype.getTheme = function(callback) {
            callback(new Errors.ValidationError('admins-function-must-be-overriden-on-server', ['getTheme']));
        };
        
        LocalDBMS.prototype.setTheme = function(theme, callback) {
            callback(new Errors.ValidationError('admins-function-must-be-overriden-on-server', ['setTheme']));
        };
    };
    
    callback(api);

})(function(api){
    typeof exports === 'undefined'? this['externalAPI'] = api: module.exports = api;
}.bind(this));
/*Copyright 2017 Timofey Rechkalov <ntsdk@yandex.ru>

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
   limitations under the License. */

"use strict";

(function(callback){
    
    function logAPI(LocalDBMS, opts) {
        
        var R             = opts.R           ;
        var CU            = opts.CommonUtils ;
        var PC            = opts.Precondition;
        
        LocalDBMS.prototype.log = function(userName, funcName, rewrite, params, callback) {
            var chain = PC.chainCheck([PC.isString(userName), PC.isString(funcName), PC.isBoolean(rewrite), PC.isArray(params)]);
            PC.precondition(chain, (err) => console.error(err), () => {
                var info = [userName, new Date().toString(), funcName, JSON.stringify(params)];
                if(this.database){
                    if(rewrite && this.database.Log[this.database.Log.length-1] != undefined){
                        if(this.database.Log[this.database.Log.length-1][2] === funcName){
                            this.database.Log[this.database.Log.length-1] = info;
                        }
                    } else {
                        this.database.Log.push(info);
                        if(this.database.Log.length > 2000){
                            this.database.Log.splice(0, 1000);
                        }
                    }
    //                console.log(this.database.Log.length);
                }
                console.log(CU.strFormat("{0},{1},{2},{3}", info));
                if(callback) callback();
            });
        };
        
        LocalDBMS.prototype.getLog = function(pageNumber, callback) {
            PC.precondition(PC.isNumber(pageNumber), callback, () => {
                var requestedLog = [];
                var max = this.database.Log.length;
                for (var i =  max - pageNumber*100; i > max - (pageNumber+1)*100; i--) {
                    if(this.database.Log[i]){
                        requestedLog.push([i+1].concat(this.database.Log[i]));
                    }
                }
//                for (var i = pageNumber*100; i < (pageNumber+1)*100; i++) {
//                    if(this.database.Log[i]){
//                        requestedLog.push([i+1].concat(this.database.Log[i]));
//                    }
//                }
                
                callback(null, {
                    requestedLog: requestedLog,
                    logSize: Math.ceil(this.database.Log.length/100)
                });
            });
        };
    };
    
    callback(logAPI);

})(function(api){
    typeof exports === 'undefined'? this['logAPI'] = api: module.exports = api;
}.bind(this));
/*Copyright 2017 Timofey Rechkalov <ntsdk@yandex.ru>

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
   limitations under the License. */

"use strict";

(function(callback){

    function api(LocalDBMS, opts) {
        
        var R             = opts.R           ;
        var CU            = opts.CommonUtils ;
        var PC            = opts.Precondition;
        var Constants     = opts.Constants   ;
        var Errors        = opts.Errors      ;
        var listeners     = opts.listeners   ;
        
        var containerPath = ['Shops'];
        var containerPath2 = ['Assets'];
        
        var assetTypeCheck = function(type){
            return PC.chainCheck([PC.isString(type), PC.elementFromEnum(type, Constants.assetTypes)]);
        };
        
        LocalDBMS.prototype.getShopNamesArray = function(callback) {
            callback(null, Object.keys(R.path(containerPath, this.database)).sort(CU.charOrdA));
        };
        LocalDBMS.prototype.getShopName = function(callback) {
            callback(new Errors.ValidationError('admins-function-must-be-overriden-on-server', ['getShopName']));
        };
        
        LocalDBMS.prototype.getShopAssets = function(callback) {
            var container = CU.clone(R.path(containerPath, this.database));
            var names = Object.keys(container).sort(CU.charOrdA);
            callback(null, names.map( name => container[name]).map(R.pick(['name','assets'])));
        };
        LocalDBMS.prototype.getShopPasswords = function(callback) {
            var container = CU.clone(R.path(containerPath, this.database));
            var names = Object.keys(container).sort(CU.charOrdA);
            callback(null, names.map( name => container[name]).map(R.pick(['name','password'])));
        };
        
        LocalDBMS.prototype.addAssetToShop = function(assetName, shopName, callback){
            var container = R.path(containerPath, this.database);
            var container2 = R.path(containerPath2, this.database);
            var chain = [PC.entityExistsCheck(shopName, R.keys(container)), PC.entityExistsCheck(assetName, R.keys(container2))];
            PC.precondition(PC.chainCheck(chain), callback, () => {
                container[shopName].assets[assetName] = true;
                if(callback) callback();
            });
        };
        
        LocalDBMS.prototype.removeAssetFromShop = function(assetName, shopName, callback){
            var container = R.path(containerPath, this.database);
            var container2 = R.path(containerPath2, this.database);
            var chain = [PC.entityExistsCheck(shopName, R.keys(container)), PC.entityExistsCheck(assetName, R.keys(container2))];
            PC.precondition(PC.chainCheck(chain), callback, () => {
                delete container[shopName].assets[assetName];
                R.values(container[shopName].categories).forEach(category => {
                    if(category.globals[assetName] !== undefined){
                        delete category.globals[assetName];
                    }
                });
                if(callback) callback();
            });
        };
        
        LocalDBMS.prototype.setShopData = function(shopName, fieldType, dataStr, callback){
            var container = R.path(containerPath, this.database);
            var chain = [PC.entityExistsCheck(shopName, R.keys(container)), PC.isString(fieldType), PC.elementFromEnum(fieldType, Constants.shopDataTypes), PC.isString(dataStr)];
            PC.precondition(PC.chainCheck(chain), callback, () => {
                container[shopName][fieldType] = dataStr;
                if(callback) callback();
            });
        };
        
        LocalDBMS.prototype.createShop = function(name, password, callback){
//            var usersInfo = this.database.ManagementInfo.UsersInfo;
            var container = R.path(containerPath, this.database);
            var chain = [PC.createEntityCheck(name, R.keys(container)), PC.isString(password), PC.isNotEmptyString(password)];
            PC.precondition(PC.chainCheck(chain), callback, () => {
                var entity = {
                    name : name,
                    password: password,
                    corporation: "",
                    sellerLogin: "",
                    sellerPassword: "",
                    assets: {},
                    categories: {},
                    localAssets: {}
                };
                
                container[name] = entity;
          //      this.ee.trigger("createShop", arguments);
                if(callback) callback();
            });
        };
        
        LocalDBMS.prototype.changeShopPassword = function(name, newPassword, callback){
            var container = R.path(containerPath, this.database);
            var chain = [PC.entityExistsCheck(name, R.keys(container)), PC.isString(newPassword), PC.isNotEmptyString(newPassword)];
            PC.precondition(PC.chainCheck(chain), callback, () => {
                container[name].password = newPassword;
                if(callback) callback();
            });
        };
        
        LocalDBMS.prototype.getShop = function(name, callback){
            var container = R.path(containerPath, this.database);
            var chain = [PC.entityExistsCheck(name, R.keys(container))];
            PC.precondition(PC.chainCheck(chain), callback, () => {
                var shop = CU.clone(container[name]);
                shop.globalAssets = R.indexBy(R.prop('name'), R.keys(shop.assets).map(name => CU.clone(this.database.Assets[name])));
                callback(null, shop);
            });
        };
        
        LocalDBMS.prototype.removeShop = function(shopName, callback) {
            var container = R.path(containerPath, this.database);
            PC.precondition(PC.removeEntityCheck(shopName, R.keys(container)), callback, () => {
                delete container[shopName];
//                this.ee.trigger("removeShop", arguments);
                if(callback) callback();
            });
        };
        
        LocalDBMS.prototype.createCategory = function(shopName, categoryName, callback) {
            var container = R.path(containerPath, this.database);
            PC.precondition(PC.removeEntityCheck(shopName, R.keys(container)), callback, () => {
                var container2 = container[shopName].categories;
                PC.precondition(PC.createEntityCheck(categoryName, R.keys(container2)), callback, () => {
                    container2[categoryName] = {
                        "globals": {},
                        "locals": {}
                    };
                    //                this.ee.trigger("removeShop", arguments);
                    if(callback) callback();
                });
            });
        };
        
        LocalDBMS.prototype.renameCategory = function(shopName, fromName, toName, callback) {
            var container = R.path(containerPath, this.database);
            PC.precondition(PC.removeEntityCheck(shopName, R.keys(container)), callback, () => {
                var container2 = container[shopName].categories;
                PC.precondition(PC.renameEntityCheck(fromName, toName, R.keys(container2)), callback, () => {
                    var data = container2[fromName];
                    container2[toName] = data;
                    delete container2[fromName];
                    
//                    this.ee.trigger("renameAsset", arguments);
                    
                    if(callback) callback();
                });
            });
        };
        
        LocalDBMS.prototype.removeCategory = function(shopName, categoryName, callback) {
            var container = R.path(containerPath, this.database);
            PC.precondition(PC.removeEntityCheck(shopName, R.keys(container)), callback, () => {
                var container2 = container[shopName].categories;
                PC.precondition(PC.removeEntityCheck(categoryName, R.keys(container2)), callback, () => {
                    delete container2[categoryName];
    //                this.ee.trigger("removeShop", arguments);
                    if(callback) callback();
                });
            });
        };
        
        LocalDBMS.prototype.getLocalAsset = function(shopName, assetName, callback) {
            var container = R.path(containerPath, this.database);
            PC.precondition(PC.entityExistsCheck(shopName, R.keys(container)), callback, () => {
                var container2 = container[shopName].localAssets;
                PC.precondition(PC.entityExistsCheck(assetName, R.keys(container2)), callback, () => {
                    callback(null, CU.clone(container2[assetName]));
                });
            });
        };
        
        LocalDBMS.prototype.createLocalAsset = function(shopName, assetName, callback) {
            var container = R.path(containerPath, this.database);
            PC.precondition(PC.removeEntityCheck(shopName, R.keys(container)), callback, () => {
                var container2 = container[shopName].localAssets;
                PC.precondition(PC.createEntityCheck(assetName, R.keys(container2)), callback, () => {
                    container2[assetName] = {
                        description: '',
                        displayString: ''
                    };
                    //                this.ee.trigger("removeShop", arguments);
                    if(callback) callback();
                });
            });
        };
        
        LocalDBMS.prototype.renameLocalAsset = function(shopName, fromName, toName, callback) {
            var container = R.path(containerPath, this.database);
            PC.precondition(PC.removeEntityCheck(shopName, R.keys(container)), callback, () => {
                var container2 = container[shopName].localAssets;
                PC.precondition(PC.renameEntityCheck(fromName, toName, R.keys(container2)), callback, () => {
                    var data = container2[fromName];
                    container2[toName] = data;
                    delete container2[fromName];
                    
                    R.values(container[shopName].categories).forEach(category => {
                        if(category.locals[fromName] !== undefined){
                            category.locals[toName] = category.locals[fromName];
                            delete category.locals[fromName];
                        }
                    });
                    
//                    this.ee.trigger("renameAsset", arguments);
                    
                    if(callback) callback();
                });
            });
        };
        
        LocalDBMS.prototype.removeLocalAsset = function(shopName, assetName, callback) {
            var container = R.path(containerPath, this.database);
            PC.precondition(PC.removeEntityCheck(shopName, R.keys(container)), callback, () => {
                var container2 = container[shopName].localAssets;
                PC.precondition(PC.removeEntityCheck(assetName, R.keys(container2)), callback, () => {
                    delete container2[assetName];
                    
                    R.values(container[shopName].categories).forEach(category => {
                        if(category.locals[assetName] !== undefined){
                            delete category.locals[assetName];
                        }
                    });
                    
                    //                this.ee.trigger("removeShop", arguments);
                    if(callback) callback();
                });
            });
        };
        
        var getTypeCheck = (fieldName, value) => {
            switch(fieldName){
            case 'displayString':
            case 'description':
            case 'apiKey':
                return PC.isString(value);
            case 'isPhysical':
                return PC.isBoolean(value);
            default: // resourceCost
                return PC.chainCheck([PC.isNumber(value), PC.isNonNegative(value)]);
            }
        };
        
        LocalDBMS.prototype.updateLocalAssetField = function(shopName, assetName, fieldName, value, callback) {
            var container = R.path(containerPath, this.database);
            PC.precondition(PC.entityExistsCheck(shopName, R.keys(container)), callback, () => {
                var container2 = container[shopName].localAssets;
                var chain = PC.chainCheck([PC.entityExistsCheck(assetName, R.keys(container2)), 
                                           PC.isString(fieldName), PC.elementFromEnum(fieldName, Constants.localAssetEditableItems),
                                           getTypeCheck(fieldName, value)]);
                PC.precondition(chain, callback, () => {
                    var data = container2[assetName];
                    data[fieldName] = value;
                    if(callback) callback();
                });
            });
        };
        
        var addAssetToCategory = function(shopName, categoryName, asset, database, fromContainer, toContainer, callback) {
            var container = R.path(containerPath, database);
            PC.precondition(PC.entityExistsCheck(shopName, R.keys(container)), callback, () => {
                var container2 = container[shopName].categories;
                var container3 = container[shopName][fromContainer];
                var chain = PC.chainCheck([PC.entityExistsCheck(categoryName, R.keys(container2)), 
                                           PC.entityExistsCheck(asset, R.keys(container3))]); 
                PC.precondition(chain, callback, () => {
                    container2[categoryName][toContainer][asset] = {
                            cost: 0
                    };
                    if(callback) callback();
                });
            });
        };
        
        LocalDBMS.prototype.setAssetCost = function(shopName, type, categoryName, asset, cost, callback){
            var container = R.path(containerPath, this.database);
            var chain = PC.chainCheck([assetTypeCheck(type), PC.entityExistsCheck(shopName, R.keys(container)), PC.isNumber(cost), PC.isNonNegative(cost)]); 
            PC.precondition(chain, callback, () => {
                var container2 = container[shopName].categories;
                PC.precondition(PC.entityExistsCheck(categoryName, R.keys(container2)), callback, () => {
                    var fromContainer = type === 'local' ? 'locals' : 'globals';
                    var container3 = container[shopName].categories[categoryName][fromContainer];
                    PC.precondition(PC.entityExistsCheck(asset, R.keys(container3)), callback, () => {
                        container3[asset].cost = cost;
                        if(callback) callback();
                    });
                });
            });
        };
        
        LocalDBMS.prototype.addGlobalAssetToCategory = function(shopName, categoryName, asset, callback) {
            addAssetToCategory(shopName, categoryName, asset, this.database, 'assets', 'globals', callback)
        };
        LocalDBMS.prototype.addLocalAssetToCategory = function(shopName, categoryName, asset, callback) {
            addAssetToCategory(shopName, categoryName, asset, this.database, 'localAssets', 'locals', callback)
        };
        
        var removeAssetFromCategory = function(shopName, categoryName, asset, database, fromContainer, callback) {
            var container = R.path(containerPath, database);
            PC.precondition(PC.entityExistsCheck(shopName, R.keys(container)), callback, () => {
                var container2 = container[shopName].categories;
                PC.precondition(PC.entityExistsCheck(categoryName, R.keys(container2)), callback, () => {
                    var container3 = container[shopName].categories[categoryName][fromContainer];
                    PC.precondition(PC.entityExistsCheck(asset, R.keys(container3)), callback, () => {
                        delete container3[asset];
                        if(callback) callback();
                    });
                });
            });
        };
        LocalDBMS.prototype.removeGlobalAssetFromCategory = function(shopName, categoryName, asset, callback) {
            removeAssetFromCategory(shopName, categoryName, asset, this.database, 'globals', callback)
        };
        LocalDBMS.prototype.removeLocalAssetFromCategory = function(shopName, categoryName, asset, callback) {
            removeAssetFromCategory(shopName, categoryName, asset, this.database, 'locals', callback)
        };
        
        
        function _renameAsset(fromAssetName, toAssetName){
            var container = R.path(containerPath, this.database);
            R.values(container).filter(shop => shop.assets[fromAssetName]).forEach(shop => {
                delete shop.assets[fromAssetName];
                shop.assets[toAssetName] = true;
                
                R.values(shop.categories).forEach(category => {
                    if(category.globals[fromAssetName] !== undefined){
                        category.globals[toAssetName] = category.globals[toAssetName];
                        delete category.globals[fromAssetName];
                    }
                });
            });
        };
        
        listeners.renameAsset = listeners.renameAsset || [];
        listeners.renameAsset.push(_renameAsset);
        
        function _removeAsset(assetName){
            var container = R.path(containerPath, this.database);
            R.values(container).forEach(shop => {
                delete shop.assets[assetName];
                
                R.values(shop.categories).forEach(category => {
                    if(category.globals[assetName] !== undefined){
                        delete category.globals[assetName];
                    }
                });
            });
        };
        
        listeners.removeAsset = listeners.removeAsset || [];
        listeners.removeAsset.push(_removeAsset);
        
    };
    
    callback(api);

})(function(api){
    typeof exports === 'undefined'? this['shopAPI'] = api: module.exports = api;
}.bind(this));
/*Copyright 2015, 2016 Timofey Rechkalov <ntsdk@yandex.ru>, Maria Sidekhmenova <matilda_@list.ru>

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
   limitations under the License. */

"use strict";

(function(exports){

    exports.data = {
            "Meta": {
                "name": "Властелин колец",
                "date": "3019/02/27 00:00",
                "preGameDate": "3018/01/01 00:00",
                "description": "События фильма, как основа для ролевой игры. В этой базе изложен первый фильм из трилогии Властелин колец. Хронология событий взята из книги.",
                "saveTime": "Mon Jul 17 2017 03:37:24 GMT+0500 (Pakistan Standard Time)"
              },
              "Settings": {
                "BriefingPreview": {
                  "characterName": "Арагорн"
                },
                "Stories": {
                  "storyName": "Братство кольца"
                },
                "CharacterProfile": {
                  "characterName": "Арагорн"
                },
                "Events": {
                  "storyName": "Начало пути",
                  "characterNames": [
                    "Арагорн"
                  ],
                  "eventIndexes": [],
                  "selectedFilter": "adaptationFilterByCharacter"
                },
                "GroupProfile": {
                  "groupName": "Нейтралы"
                }
              },
              "Version": "0.6.6",
              "Log": [
                [
                  "user",
                  "Thu Oct 13 2016 19:09:25 GMT+0500 (Pakistan Standard Time)",
                  "createProfileItem",
                  "[\"Блок\",\"enum\",\"_\",true,11]"
                ],
                [
                  "user",
                  "Thu Oct 13 2016 19:09:55 GMT+0500 (Pakistan Standard Time)",
                  "updateDefaultValue",
                  "[\"Блок\",\"Тёмный,Светлый,Нейтрал\"]"
                ],
                [
                  "user",
                  "Thu Oct 13 2016 19:10:09 GMT+0500 (Pakistan Standard Time)",
                  "moveProfileItem",
                  "[11,0]"
                ],
                [
                  "user",
                  "Thu Oct 13 2016 19:12:30 GMT+0500 (Pakistan Standard Time)",
                  "createGroup",
                  "[\"Светлый блок\"]"
                ],
                [
                  "user",
                  "Thu Oct 13 2016 19:12:37 GMT+0500 (Pakistan Standard Time)",
                  "createGroup",
                  "[\"Темный блок\"]"
                ],
                [
                  "user",
                  "Thu Oct 13 2016 19:12:47 GMT+0500 (Pakistan Standard Time)",
                  "createGroup",
                  "[\"Нейтралы\"]"
                ],
                [
                  "user",
                  "Thu Oct 13 2016 19:12:58 GMT+0500 (Pakistan Standard Time)",
                  "createGroup",
                  "[\"Эльфы\"]"
                ],
                [
                  "user",
                  "Thu Oct 13 2016 19:13:52 GMT+0500 (Pakistan Standard Time)",
                  "saveFilterToGroup",
                  "[\"Нейтралы\",[{\"type\":\"enum\",\"name\":\"profile-Блок\",\"selectedOptions\":{\"Нейтрал\":true}}]]"
                ],
                [
                  "user",
                  "Thu Oct 13 2016 19:13:55 GMT+0500 (Pakistan Standard Time)",
                  "saveFilterToGroup",
                  "[\"Светлый блок\",[{\"type\":\"enum\",\"name\":\"profile-Блок\",\"selectedOptions\":{\"Светлый\":true}}]]"
                ],
                [
                  "user",
                  "Thu Oct 13 2016 19:13:59 GMT+0500 (Pakistan Standard Time)",
                  "saveFilterToGroup",
                  "[\"Темный блок\",[{\"type\":\"enum\",\"name\":\"profile-Блок\",\"selectedOptions\":{\"Тёмный\":true}}]]"
                ],
                [
                  "user",
                  "Thu Oct 13 2016 19:14:05 GMT+0500 (Pakistan Standard Time)",
                  "saveFilterToGroup",
                  "[\"Эльфы\",[{\"type\":\"enum\",\"name\":\"profile-Раса\",\"selectedOptions\":{\"эльф\":true}}]]"
                ],
                [
                  "user",
                  "Thu Oct 13 2016 19:16:26 GMT+0500 (Pakistan Standard Time)",
                  "addBoardGroup",
                  "[\"Нейтралы\"]"
                ],
                [
                  "user",
                  "Thu Oct 13 2016 19:16:29 GMT+0500 (Pakistan Standard Time)",
                  "addBoardGroup",
                  "[\"Светлый блок\"]"
                ],
                [
                  "user",
                  "Thu Oct 13 2016 19:16:31 GMT+0500 (Pakistan Standard Time)",
                  "addBoardGroup",
                  "[\"Темный блок\"]"
                ],
                [
                  "user",
                  "Thu Oct 13 2016 19:16:33 GMT+0500 (Pakistan Standard Time)",
                  "addBoardGroup",
                  "[\"Эльфы\"]"
                ],
                [
                  "user",
                  "Thu Oct 13 2016 19:16:47 GMT+0500 (Pakistan Standard Time)",
                  "createResource",
                  "[\"Кольцо Всевластья\"]"
                ],
                [
                  "user",
                  "Thu Oct 13 2016 19:17:14 GMT+0500 (Pakistan Standard Time)",
                  "addEdge",
                  "[\"group-Темный блок\",\"resource-Кольцо Всевластья\",\"Стремится захватить\"]"
                ],
                [
                  "user",
                  "Thu Oct 13 2016 19:17:27 GMT+0500 (Pakistan Standard Time)",
                  "addEdge",
                  "[\"group-Светлый блок\",\"resource-Кольцо Всевластья\",\"Стремится уничтожить\"]"
                ],
                [
                  "user",
                  "Thu Oct 13 2016 19:17:50 GMT+0500 (Pakistan Standard Time)",
                  "addEdge",
                  "[\"group-Нейтралы\",\"resource-Кольцо Всевластья\",\"Стремятся эффективно использовать\"]"
                ],
                [
                  "user",
                  "Thu Oct 13 2016 19:18:15 GMT+0500 (Pakistan Standard Time)",
                  "addEdge",
                  "[\"group-Светлый блок\",\"group-Темный блок\",\"Хочет уничтожить\"]"
                ],
                [
                  "user",
                  "Thu Oct 13 2016 19:18:20 GMT+0500 (Pakistan Standard Time)",
                  "addEdge",
                  "[\"group-Темный блок\",\"group-Светлый блок\",\"Хочет уничтожить\"]"
                ],
                [
                  "user",
                  "Thu Oct 13 2016 19:19:40 GMT+0500 (Pakistan Standard Time)",
                  "saveFilterToGroup",
                  "[\"Эльфы\",[{\"type\":\"enum\",\"name\":\"profile-Блок\",\"selectedOptions\":{\"Светлый\":true}},{\"type\":\"enum\",\"name\":\"profile-Раса\",\"selectedOptions\":{\"эльф\":true}}]]"
                ],
                [
                  "user",
                  "Thu Oct 13 2016 19:20:25 GMT+0500 (Pakistan Standard Time)",
                  "addEdge",
                  "[\"group-Темный блок\",\"group-Нейтралы\",\"Хочет поработить\"]"
                ],
                [
                  "user",
                  "Thu Oct 13 2016 19:20:54 GMT+0500 (Pakistan Standard Time)",
                  "addEdge",
                  "[\"group-Светлый блок\",\"group-Нейтралы\",\"Хочет присоединить\"]"
                ],
                [
                  "user",
                  "Thu Oct 13 2016 19:21:37 GMT+0500 (Pakistan Standard Time)",
                  "addEdge",
                  "[\"group-Эльфы\",\"group-Светлый блок\",\"Направляют\"]"
                ],
                [
                  "user",
                  "Thu Oct 13 2016 19:22:00 GMT+0500 (Pakistan Standard Time)",
                  "createGroup",
                  "[\"Народ Рохана\"]"
                ],
                [
                  "user",
                  "Thu Oct 13 2016 19:22:04 GMT+0500 (Pakistan Standard Time)",
                  "createGroup",
                  "[\"Народ Гондора\"]"
                ],
                [
                  "user",
                  "Thu Oct 13 2016 19:22:11 GMT+0500 (Pakistan Standard Time)",
                  "addBoardGroup",
                  "[\"Народ Гондора\"]"
                ],
                [
                  "user",
                  "Thu Oct 13 2016 19:22:13 GMT+0500 (Pakistan Standard Time)",
                  "addBoardGroup",
                  "[\"Народ Рохана\"]"
                ],
                [
                  "user",
                  "Thu Oct 13 2016 19:22:51 GMT+0500 (Pakistan Standard Time)",
                  "addEdge",
                  "[\"group-Народ Гондора\",\"group-Народ Рохана\",\"Союзники\"]"
                ],
                [
                  "user",
                  "Thu Oct 13 2016 19:22:54 GMT+0500 (Pakistan Standard Time)",
                  "addEdge",
                  "[\"group-Народ Рохана\",\"group-Народ Гондора\",\"Союзники\"]"
                ],
                [
                  "user",
                  "Thu Oct 13 2016 19:23:20 GMT+0500 (Pakistan Standard Time)",
                  "addEdge",
                  "[\"group-Народ Гондора\",\"group-Светлый блок\",\"Склоняются\"]"
                ],
                [
                  "user",
                  "Thu Oct 13 2016 19:23:24 GMT+0500 (Pakistan Standard Time)",
                  "addEdge",
                  "[\"group-Народ Рохана\",\"group-Светлый блок\",\"Склоняются\"]"
                ],
                [
                  "user",
                  "Thu Oct 13 2016 19:26:04 GMT+0500 (Pakistan Standard Time)",
                  "createResource",
                  "[\"Шахты Мории\"]"
                ],
                [
                  "user",
                  "Thu Oct 13 2016 19:26:18 GMT+0500 (Pakistan Standard Time)",
                  "addEdge",
                  "[\"group-Темный блок\",\"resource-Шахты Мории\",\"Контролирует\"]"
                ],
                [
                  "user",
                  "Thu Oct 13 2016 19:26:47 GMT+0500 (Pakistan Standard Time)",
                  "addEdge",
                  "[\"group-Народ Гондора\",\"resource-Шахты Мории\",\"Хочет захватить\"]"
                ],
                [
                  "user",
                  "Thu Oct 13 2016 19:31:26 GMT+0500 (Pakistan Standard Time)",
                  "createCharacter",
                  "[\"Народ Гондора\"]"
                ],
                [
                  "user",
                  "Thu Oct 13 2016 19:31:30 GMT+0500 (Pakistan Standard Time)",
                  "createCharacter",
                  "[\"Народ Рохана\"]"
                ],
                [
                  "user",
                  "Thu Oct 13 2016 19:31:40 GMT+0500 (Pakistan Standard Time)",
                  "createProfileItem",
                  "[\"Народ Гондора\",\"checkbox\",false,true,12]"
                ],
                [
                  "user",
                  "Thu Oct 13 2016 19:31:46 GMT+0500 (Pakistan Standard Time)",
                  "createProfileItem",
                  "[\"Народ Рохана\",\"checkbox\",false,true,13]"
                ],
                [
                  "user",
                  "Thu Oct 13 2016 19:32:36 GMT+0500 (Pakistan Standard Time)",
                  "saveFilterToGroup",
                  "[\"Народ Гондора\",[{\"type\":\"checkbox\",\"name\":\"profile-Народ Гондора\",\"selectedOptions\":{\"true\":true}}]]"
                ],
                [
                  "user",
                  "Thu Oct 13 2016 19:32:53 GMT+0500 (Pakistan Standard Time)",
                  "saveFilterToGroup",
                  "[\"Народ Рохана\",[{\"type\":\"checkbox\",\"name\":\"profile-Народ Рохана\",\"selectedOptions\":{\"true\":true}}]]"
                ],
                [
                  "user",
                  "Sun May 28 2017 03:13:10 GMT+0500 (Pakistan Standard Time)",
                  "createAsset",
                  "[\"345\"]"
                ],
                [
                  "user",
                  "Sun May 28 2017 03:13:11 GMT+0500 (Pakistan Standard Time)",
                  "createAsset",
                  "[\"567\"]"
                ],
                [
                  "user",
                  "Sun May 28 2017 03:13:12 GMT+0500 (Pakistan Standard Time)",
                  "createAsset",
                  "[\"678\"]"
                ],
                [
                  "user",
                  "Sun May 28 2017 03:13:19 GMT+0500 (Pakistan Standard Time)",
                  "createShop",
                  "[\"456\",\"456\"]"
                ],
                [
                  "user",
                  "Sun May 28 2017 03:13:21 GMT+0500 (Pakistan Standard Time)",
                  "createShop",
                  "[\"567\",\"678\"]"
                ],
                [
                  "user",
                  "Sun May 28 2017 03:13:22 GMT+0500 (Pakistan Standard Time)",
                  "createShop",
                  "[\"789\",\"\"]"
                ],
                [
                  "user",
                  "Sun May 28 2017 03:13:25 GMT+0500 (Pakistan Standard Time)",
                  "createShop",
                  "[\"789\",\"456456\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 04:50:28 GMT+0500 (Pakistan Standard Time)",
                  "addAssetToShop",
                  "[\"345\",\"456\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 04:50:30 GMT+0500 (Pakistan Standard Time)",
                  "addAssetToShop",
                  "[\"567\",\"456\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 04:50:34 GMT+0500 (Pakistan Standard Time)",
                  "addAssetToShop",
                  "[\"567\",\"567\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 04:50:36 GMT+0500 (Pakistan Standard Time)",
                  "addAssetToShop",
                  "[\"678\",\"567\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 04:50:40 GMT+0500 (Pakistan Standard Time)",
                  "addAssetToShop",
                  "[\"345\",\"789\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 04:50:41 GMT+0500 (Pakistan Standard Time)",
                  "addAssetToShop",
                  "[\"678\",\"789\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 04:54:36 GMT+0500 (Pakistan Standard Time)",
                  "removeShop",
                  "[\"456\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 04:54:37 GMT+0500 (Pakistan Standard Time)",
                  "removeShop",
                  "[\"567\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 04:54:39 GMT+0500 (Pakistan Standard Time)",
                  "removeShop",
                  "[\"789\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 04:54:49 GMT+0500 (Pakistan Standard Time)",
                  "createShop",
                  "[\"США\",\" США \"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 04:54:56 GMT+0500 (Pakistan Standard Time)",
                  "createShop",
                  "[\"Serenity\",\"Serenity\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 04:55:02 GMT+0500 (Pakistan Standard Time)",
                  "createShop",
                  "[\"Johnson&Johnson\",\"Johnson&Johnson\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 04:55:08 GMT+0500 (Pakistan Standard Time)",
                  "createShop",
                  "[\"PanAm\",\"PanAm\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 04:55:31 GMT+0500 (Pakistan Standard Time)",
                  "removeAsset",
                  "[\"345\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 04:55:33 GMT+0500 (Pakistan Standard Time)",
                  "removeAsset",
                  "[\"567\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 04:55:34 GMT+0500 (Pakistan Standard Time)",
                  "removeAsset",
                  "[\"678\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 04:59:21 GMT+0500 (Pakistan Standard Time)",
                  "createAsset",
                  "[\"Киберпротез руки «Орфей»\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 04:59:28 GMT+0500 (Pakistan Standard Time)",
                  "createAsset",
                  "[\"Киберпротез ноги «Стабильность»\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 04:59:35 GMT+0500 (Pakistan Standard Time)",
                  "createAsset",
                  "[\"Киберсердце «Железный дровосек»\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 04:59:44 GMT+0500 (Pakistan Standard Time)",
                  "createAsset",
                  "[\"Клон-сердце LoveIs\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 05:00:12 GMT+0500 (Pakistan Standard Time)",
                  "renameAsset",
                  "[\"Киберпротез ноги «Стабильность»\",\"Киберпротез руки «Орфей» (Sn)\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 05:00:29 GMT+0500 (Pakistan Standard Time)",
                  "renameAsset",
                  "[\"Киберпротез руки «Орфей»\",\"Киберпротез ноги «Стабильность» (Sn)\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 05:00:44 GMT+0500 (Pakistan Standard Time)",
                  "renameAsset",
                  "[\"Киберсердце «Железный дровосек»\",\"Киберсердце «Железный дровосек» (Sn)\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 05:00:59 GMT+0500 (Pakistan Standard Time)",
                  "renameAsset",
                  "[\"Клон-сердце LoveIs\",\"Клон-сердце LoveIs (J&J)\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 05:01:23 GMT+0500 (Pakistan Standard Time)",
                  "createAsset",
                  "[\"Клон-легкие BioAir (J&J)\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 05:01:38 GMT+0500 (Pakistan Standard Time)",
                  "createAsset",
                  "[\"Клон щитовидной железы BioBarHero (J&J)\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 05:01:51 GMT+0500 (Pakistan Standard Time)",
                  "createAsset",
                  "[\"BioLymph (J&J)\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 05:02:05 GMT+0500 (Pakistan Standard Time)",
                  "createAsset",
                  "[\"Мозговой имплант CyberGamer 1 (PA)\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 05:02:15 GMT+0500 (Pakistan Standard Time)",
                  "createAsset",
                  "[\"Имплант нервной системы FriendInside 1 (PA)\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 05:02:24 GMT+0500 (Pakistan Standard Time)",
                  "createAsset",
                  "[\"Киберстимулятор нервной системы «Снежинка» (Sn)\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 05:02:53 GMT+0500 (Pakistan Standard Time)",
                  "createAsset",
                  "[\"Запись воспоминаний\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 05:03:03 GMT+0500 (Pakistan Standard Time)",
                  "createAsset",
                  "[\"Копирование воспоминаний\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 05:03:13 GMT+0500 (Pakistan Standard Time)",
                  "createAsset",
                  "[\"Проигрывание воспоминаний\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 05:03:24 GMT+0500 (Pakistan Standard Time)",
                  "createAsset",
                  "[\"Сохранение слепка сознания\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 05:03:43 GMT+0500 (Pakistan Standard Time)",
                  "createAsset",
                  "[\"Модификация характера и личных черт\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 05:04:02 GMT+0500 (Pakistan Standard Time)",
                  "createAsset",
                  "[\"Криозаморозка (США)\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 05:04:38 GMT+0500 (Pakistan Standard Time)",
                  "createAsset",
                  "[\"extraVattoR\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 05:05:02 GMT+0500 (Pakistan Standard Time)",
                  "addAssetToShop",
                  "[\"BioLymph (J&J)\",\"Johnson&Johnson\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 05:05:05 GMT+0500 (Pakistan Standard Time)",
                  "addAssetToShop",
                  "[\"Клон щитовидной железы BioBarHero (J&J)\",\"Johnson&Johnson\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 05:05:06 GMT+0500 (Pakistan Standard Time)",
                  "addAssetToShop",
                  "[\"Клон-легкие BioAir (J&J)\",\"Johnson&Johnson\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 05:05:08 GMT+0500 (Pakistan Standard Time)",
                  "addAssetToShop",
                  "[\"Клон-сердце LoveIs (J&J)\",\"Johnson&Johnson\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 05:05:11 GMT+0500 (Pakistan Standard Time)",
                  "addAssetToShop",
                  "[\"Копирование воспоминаний\",\"Johnson&Johnson\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 05:05:13 GMT+0500 (Pakistan Standard Time)",
                  "addAssetToShop",
                  "[\"Запись воспоминаний\",\"Johnson&Johnson\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 05:05:18 GMT+0500 (Pakistan Standard Time)",
                  "addAssetToShop",
                  "[\"Модификация характера и личных черт\",\"Johnson&Johnson\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 05:05:23 GMT+0500 (Pakistan Standard Time)",
                  "addAssetToShop",
                  "[\"Киберпротез ноги «Стабильность» (Sn)\",\"Serenity\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 05:05:24 GMT+0500 (Pakistan Standard Time)",
                  "addAssetToShop",
                  "[\"Киберпротез руки «Орфей» (Sn)\",\"Serenity\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 05:05:26 GMT+0500 (Pakistan Standard Time)",
                  "addAssetToShop",
                  "[\"Киберсердце «Железный дровосек» (Sn)\",\"Serenity\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 05:05:28 GMT+0500 (Pakistan Standard Time)",
                  "addAssetToShop",
                  "[\"Киберстимулятор нервной системы «Снежинка» (Sn)\",\"Serenity\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 05:05:31 GMT+0500 (Pakistan Standard Time)",
                  "addAssetToShop",
                  "[\"Копирование воспоминаний\",\"Serenity\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 05:05:32 GMT+0500 (Pakistan Standard Time)",
                  "addAssetToShop",
                  "[\"Криозаморозка (США)\",\"Serenity\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 05:05:34 GMT+0500 (Pakistan Standard Time)",
                  "addAssetToShop",
                  "[\"Мозговой имплант CyberGamer 1 (PA)\",\"Serenity\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 05:05:40 GMT+0500 (Pakistan Standard Time)",
                  "addAssetToShop",
                  "[\"Имплант нервной системы FriendInside 1 (PA)\",\"PanAm\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 05:05:42 GMT+0500 (Pakistan Standard Time)",
                  "addAssetToShop",
                  "[\"Киберсердце «Железный дровосек» (Sn)\",\"PanAm\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 05:05:44 GMT+0500 (Pakistan Standard Time)",
                  "addAssetToShop",
                  "[\"Клон щитовидной железы BioBarHero (J&J)\",\"PanAm\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 05:05:45 GMT+0500 (Pakistan Standard Time)",
                  "addAssetToShop",
                  "[\"Мозговой имплант CyberGamer 1 (PA)\",\"PanAm\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 05:05:49 GMT+0500 (Pakistan Standard Time)",
                  "addAssetToShop",
                  "[\"Клон-сердце LoveIs (J&J)\",\"PanAm\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 05:05:51 GMT+0500 (Pakistan Standard Time)",
                  "addAssetToShop",
                  "[\"extraVattoR\",\"PanAm\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 05:05:54 GMT+0500 (Pakistan Standard Time)",
                  "addAssetToShop",
                  "[\"Криозаморозка (США)\",\"США\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 05:05:56 GMT+0500 (Pakistan Standard Time)",
                  "addAssetToShop",
                  "[\"Клон-легкие BioAir (J&J)\",\"США\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 05:05:58 GMT+0500 (Pakistan Standard Time)",
                  "addAssetToShop",
                  "[\"extraVattoR\",\"США\"]"
                ],
                [
                  "user",
                  "Tue May 30 2017 05:06:00 GMT+0500 (Pakistan Standard Time)",
                  "addAssetToShop",
                  "[\"BioLymph (J&J)\",\"США\"]"
                ],
                [
                  "user",
                  "Mon Jun 26 2017 03:29:03 GMT+0500 (Pakistan Standard Time)",
                  "createAsset",
                  "[\"Буст\"]"
                ],
                [
                  "user",
                  "Mon Jun 26 2017 03:34:20 GMT+0500 (Pakistan Standard Time)",
                  "createAsset",
                  "[\"Пластырь\"]"
                ],
                [
                  "user",
                  "Mon Jul 17 2017 00:47:35 GMT+0500 (Pakistan Standard Time)",
                  "addAssetToShop",
                  "[\"Буст\",\"Johnson&Johnson\"]"
                ],
                [
                  "user",
                  "Mon Jul 17 2017 00:47:36 GMT+0500 (Pakistan Standard Time)",
                  "addAssetToShop",
                  "[\"extraVattoR\",\"Johnson&Johnson\"]"
                ],
                [
                  "user",
                  "Mon Jul 17 2017 00:47:38 GMT+0500 (Pakistan Standard Time)",
                  "addAssetToShop",
                  "[\"Киберпротез руки «Орфей» (Sn)\",\"Johnson&Johnson\"]"
                ]
              ],
              "Shops": {
                "США": {
                  "name": "США",
                  "password": " США ",
                  "assets": {
                    "Криозаморозка (США)": true,
                    "Клон-легкие BioAir (J&J)": true,
                    "extraVattoR": true,
                    "BioLymph (J&J)": true
                  },
                  "categories": {},
                  "localAssets": {},
                  "corporation": ""
                },
                "Serenity": {
                  "name": "Serenity",
                  "password": "Serenity",
                  "assets": {
                    "Киберпротез ноги «Стабильность» (Sn)": true,
                    "Киберпротез руки «Орфей» (Sn)": true,
                    "Киберсердце «Железный дровосек» (Sn)": true,
                    "Киберстимулятор нервной системы «Снежинка» (Sn)": true,
                    "Копирование воспоминаний": true,
                    "Криозаморозка (США)": true,
                    "Мозговой имплант CyberGamer 1 (PA)": true
                  },
                  "categories": {
                    "Услуги": {
                      "globals": {},
                      "locals": {}
                    },
                    "Протезы": {
                      "globals": {},
                      "locals": {}
                    }
                  },
                  "localAssets": {
                    "Журнал \"Бодибилдинг\"": {
                      "description": "",
                      "displayString": ""
                    },
                    "Фигурка Iron Man": {
                      "description": "",
                      "displayString": ""
                    }
                  },
                  "corporation": ""
                },
                "Johnson&Johnson": {
                  "name": "Johnson&Johnson",
                  "password": "Johnson&Johnson",
                  "assets": {
                    "BioLymph (J&J)": true,
                    "Клон щитовидной железы BioBarHero (J&J)": true,
                    "Клон-легкие BioAir (J&J)": true,
                    "Клон-сердце LoveIs (J&J)": true,
                    "Копирование воспоминаний": true,
                    "Запись воспоминаний": true,
                    "Модификация характера и личных черт": true,
                    "Буст": true,
                    "extraVattoR": true,
                    "Киберпротез руки «Орфей» (Sn)": true
                  },
                  "categories": {
                    "Личность": {
                      "globals": {
                        "Копирование воспоминаний": {
                          "cost": 200
                        },
                        "Запись воспоминаний": {
                          "cost": 200
                        },
                        "Модификация характера и личных черт": {
                          "cost": 300
                        }
                      },
                      "locals": {}
                    },
                    "Внутренние органы": {
                      "globals": {
                        "BioLymph (J&J)": {
                          "cost": 2200
                        },
                        "Клон щитовидной железы BioBarHero (J&J)": {
                          "cost": 1200
                        },
                        "Клон-легкие BioAir (J&J)": {
                          "cost": 500
                        },
                        "Клон-сердце LoveIs (J&J)": {
                          "cost": 3000
                        }
                      },
                      "locals": {
                        "CyberTrader": {
                          "cost": 300
                        }
                      }
                    },
                    "Неликвид": {
                      "globals": {},
                      "locals": {
                        "Inquisitor": {
                          "cost": 100
                        }
                      }
                    }
                  },
                  "localAssets": {
                    "Golden Gate Times": {
                      "description": "",
                      "displayString": ""
                    },
                    "CyberTrader": {
                      "description": "",
                      "displayString": ""
                    },
                    "Inquisitor": {
                      "description": "",
                      "displayString": ""
                    }
                  },
                  "corporation": ""
                },
                "PanAm": {
                  "name": "PanAm",
                  "password": "PanAm",
                  "assets": {
                    "Имплант нервной системы FriendInside 1 (PA)": true,
                    "Киберсердце «Железный дровосек» (Sn)": true,
                    "Клон щитовидной железы BioBarHero (J&J)": true,
                    "Мозговой имплант CyberGamer 1 (PA)": true,
                    "Клон-сердце LoveIs (J&J)": true,
                    "extraVattoR": true
                  },
                  "categories": {},
                  "localAssets": {},
                  "corporation": ""
                }
              },
              "Assets": {
                "Киберпротез руки «Орфей» (Sn)": {
                  "name": "Киберпротез руки «Орфей» (Sn)",
                  "displayString": "",
                  "isPhysical": false,
                  "resourceCost": 20,
                  "apiKey": "",
                  "description": "заменяет поврежденную руку, добавляет +1 хит. Требует периодического сервиса, иначе теряет функциональность (нельзя пользоваться одной кистью)."
                },
                "Киберпротез ноги «Стабильность» (Sn)": {
                  "name": "Киберпротез ноги «Стабильность» (Sn)",
                  "displayString": "",
                  "isPhysical": false,
                  "resourceCost": 30,
                  "apiKey": "",
                  "description": "заменяет поврежденную ногу. Требует периодического сервиса, иначе теряет функциональность (хромота)."
                },
                "Киберсердце «Железный дровосек» (Sn)": {
                  "name": "Киберсердце «Железный дровосек» (Sn)",
                  "displayString": "",
                  "isPhysical": false,
                  "resourceCost": 10,
                  "apiKey": "",
                  "description": "заменяет поврежденное сердце. Требует периодического сервиса, иначе теряет функциональность (тяжелое ранение)."
                },
                "Клон-сердце LoveIs (J&J)": {
                  "name": "Клон-сердце LoveIs (J&J)",
                  "displayString": "",
                  "isPhysical": false,
                  "resourceCost": 20,
                  "apiKey": "",
                  "description": "заменяет поврежденное сердце. Ходят слухи, что значительно повышает эмоциональность."
                },
                "Клон-легкие BioAir (J&J)": {
                  "name": "Клон-легкие BioAir (J&J)",
                  "displayString": "",
                  "isPhysical": false,
                  "resourceCost": 10,
                  "apiKey": "",
                  "description": "заменяет поврежденные легкие. Ходят слухи, что они не долговечны."
                },
                "Клон щитовидной железы BioBarHero (J&J)": {
                  "name": "Клон щитовидной железы BioBarHero (J&J)",
                  "displayString": "",
                  "isPhysical": false,
                  "resourceCost": 30,
                  "apiKey": "",
                  "description": "восстанавливает поврежденную эндокринную систему. В силу ускоренного обмена веществ предотвращает похмелье. Ходят слухи, что люди с такими имплантами чаще зависают в барах."
                },
                "BioLymph (J&J)": {
                  "name": "BioLymph (J&J)",
                  "displayString": "",
                  "isPhysical": false,
                  "resourceCost": 10,
                  "apiKey": "",
                  "description": "восстанавливает поврежденную лимфатическую систему. При легком ранении хиты не теряются, а восстанавливаются со скоростью 1 хит в 10 минут (вне боевки). Ходят слухи, что люди у людей с новой биологической лимфой меняется и характер."
                },
                "Мозговой имплант CyberGamer 1 (PA)": {
                  "name": "Мозговой имплант CyberGamer 1 (PA)",
                  "displayString": "",
                  "isPhysical": false,
                  "resourceCost": 30,
                  "apiKey": "",
                  "description": "восстанавливает поврежденную нервную систему, +0,5 часа времени пребывания в VR. Ходят слухи, что те, кто много его используют, особенно сильно привязываются к VR."
                },
                "Имплант нервной системы FriendInside 1 (PA)": {
                  "name": "Имплант нервной системы FriendInside 1 (PA)",
                  "displayString": "",
                  "isPhysical": false,
                  "resourceCost": 10,
                  "apiKey": "",
                  "description": "восстанавливает поврежденную нервную систему, позволяет носителям импланта устанавливать связь мозг-мозг, передавая мысли или синхронизируя другие параметры. Широко не распространяется, но известно, что этой технологией пользуется группа Multisapiens."
                },
                "Киберстимулятор нервной системы «Снежинка» (Sn)": {
                  "name": "Киберстимулятор нервной системы «Снежинка» (Sn)",
                  "displayString": "",
                  "isPhysical": false,
                  "resourceCost": 20,
                  "apiKey": "",
                  "description": "восстанавливает поврежденную нервную систему, аугментация нервной системы широкого спектра. В зависимости от настроек позволяет до некоторой степени контролировать эмоции, стимулировать мозговую активность, эффективно работать с воспоминаниями."
                },
                "Запись воспоминаний": {
                  "name": "Запись воспоминаний",
                  "displayString": "",
                  "isPhysical": false,
                  "resourceCost": 30,
                  "apiKey": "",
                  "description": ""
                },
                "Копирование воспоминаний": {
                  "name": "Копирование воспоминаний",
                  "displayString": "",
                  "isPhysical": false,
                  "resourceCost": 30,
                  "apiKey": "",
                  "description": ""
                },
                "Проигрывание воспоминаний": {
                  "name": "Проигрывание воспоминаний",
                  "displayString": "",
                  "isPhysical": false,
                  "resourceCost": 10,
                  "apiKey": "",
                  "description": ""
                },
                "Сохранение слепка сознания": {
                  "name": "Сохранение слепка сознания",
                  "displayString": "",
                  "isPhysical": false,
                  "resourceCost": 40,
                  "apiKey": "",
                  "description": ""
                },
                "Модификация характера и личных черт": {
                  "name": "Модификация характера и личных черт",
                  "displayString": "",
                  "isPhysical": false,
                  "resourceCost": 20,
                  "apiKey": "",
                  "description": ""
                },
                "Криозаморозка (США)": {
                  "name": "Криозаморозка (США)",
                  "displayString": "",
                  "isPhysical": false,
                  "resourceCost": 10,
                  "apiKey": "",
                  "description": ""
                },
                "extraVattoR": {
                  "name": "extraVattoR",
                  "displayString": "",
                  "isPhysical": false,
                  "resourceCost": 20,
                  "apiKey": "",
                  "description": ""
                },
                "Буст": {
                  "name": "Буст",
                  "displayString": "",
                  "isPhysical": true,
                  "resourceCost": 2,
                  "apiKey": "",
                  "description": "Мощный стимулятор."
                },
                "Пластырь": {
                  "name": "Пластырь",
                  "displayString": "",
                  "isPhysical": false,
                  "resourceCost": 2,
                  "apiKey": "",
                  "description": "Медикамент."
                }
              }
            };

})(typeof exports === 'undefined'? this['BaseExample']={}: exports);
//# sourceMappingURL=data:application/json;base64,
